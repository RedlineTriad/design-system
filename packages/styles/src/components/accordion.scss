@forward './../variables/options';

@use './../mixins/button' as button-mixins;
@use './../mixins/color' as color-mixins;
@use './../mixins/icons' as icon-mixins;
@use './../mixins/type' as type-mixins;
@use './../mixins/utilities' as utility-mixins;

@use './../variables/components/accordion';

.accordion-item {
  --post-accordion-border-width: #{accordion.$accordion-border-width};
  --post-accordion-border-color: #{accordion.$accordion-border-color};
  --post-accordion-header-font-weight: #{accordion.$accordion-header-font-weight};
  --post-accordion-header-line-height: #{accordion.$accordion-header-line-height};
  --post-accordion-button-padding: #{accordion.$accordion-button-padding};
  --post-accordion-icon-size: #{accordion.$accordion-icon-size};
  --post-accordion-button-cursor: #{accordion.$accordion-button-cursor};
  --post-accordion-button-disabled-opacity: #{accordion.$accordion-button-disabled-opacity};
  --post-accordion-button-focus-box-shadow: #{accordion.$accordion-button-focus-box-shadow};
  --post-accordion-icon-transition: #{accordion.$accordion-icon-transition};
  --post-accordion-icon-transform: #{accordion.$accordion-icon-transform};
  --post-accordion-body-padding: #{accordion.$accordion-body-padding};
  --post-accordion-heading-margin: #{accordion.$accordion-heading-margin};
  --post-accordion-heading-font-weight: #{accordion.$accordion-heading-font-weight};

  border-block-start: var(--post-accordion-border-width) solid var(--post-accordion-border-color);
}

.accordion-header {
  @include type-mixins.font-curve(accordion.$accordion-header-font-curve);
  font-weight: var(--post-accordion-header-font-weight);
  line-height: var(--post-accordion-header-line-height);
  margin: 0;
}

.accordion-button {
  @include button-mixins.reset-button;

  width: 100%;
  position: relative;
  padding-block: var(--post-accordion-button-padding);
  padding-inline-start: var(--post-accordion-button-padding);
  padding-inline-end: calc(var(--post-accordion-button-padding) + var(--post-accordion-icon-size));
  text-align: start;

  &:not(:disabled) {
    cursor: var(--post-accordion-button-cursor);
  }

  &:disabled {
    opacity: var(--post-accordion-button-disabled-opacity);
  }

  &:focus {
    outline: none;
    box-shadow: var(--post-accordion-button-focus-box-shadow);
  }

  &::after {
    @include icon-mixins.pi(accordion.$accordion-icon-name);
    content: '';
    display: block;
    height: var(--post-accordion-icon-size);
    width: var(--post-accordion-icon-size);
    background-size: var(--post-accordion-icon-size);
    background-position: center;
    background-repeat: no-repeat;
    position: absolute;
    inset-inline-end: var(--post-accordion-button-padding);
    inset-block-start: 50%;
    transform: translateY(-50%);
    transition: var(--post-accordion-icon-transition);

    // TODO: find a way to style icon within web component on dark background
    @include color-mixins.on-dark-background() {
      filter: invert(1);
    }
  }

  &.collapsed::after {
    transform: translateY(-50%) var(--post-accordion-icon-transform);
  }

  // TODO: find a way to style WHCM within web component
  @include utility-mixins.high-contrast-mode() {
    &:hover,
    &:focus-visible {
      &:not(:disabled) {
        outline: var(--post-accordion-border-width) solid Highlight;
      }
    }

    &:disabled {
      opacity: 1 !important;
    }
  }
}

.accordion-body {
  padding: var(--post-accordion-body-padding);
  border-block-start: var(--post-accordion-border-width) solid var(--post-accordion-border-color);

  // TODO: find a way to style headings within web component
  @each $heading-size in (1 2 3 4 5 6) {
    h#{$heading-size},
    .h#{$heading-size} {
      @include type-mixins.font-curve(accordion.$accordion-heading-font-curve);
      margin: var(--post-accordion-heading-margin);
      font-weight: var(--post-accordion-heading-font-weight);
    }
  }
}

.accordion-button,
.accordion-body {
  > :first-child {
    margin-block-start: 0 !important;
  }

  > :last-child {
    margin-block-end: 0 !important;
  }
}
